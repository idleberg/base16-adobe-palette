\H{sections} Sections

Each NSIS installer contains one or more Sections. Each These sections are created, modified, and ended with the following commands.

\b Each section contains zero or more instructions.

\b Sections are executed in order by the resulting installer, and if ComponentText is set, the user will have the option of disabling/enabling each visible section.

\b If a section's name is 'Uninstall' or is prefixed with 'un.', then it is a an uninstaller section.

\S1{ssectioncommands} Section Commands

\S2{saddsize} AddSize

\c size_kb

Tells the installer that the current section needs an additional "size_kb" kilobytes of disk space. Only valid within a section (will have no effect outside of a section or in a function).

\c Section
\c AddSize 500
\c SectionEnd

\S2{ssection} Section

\c [/o] [([!]|[-])section_name] [section index output]

Begins and opens a new section. If section_name is empty, omitted, or begins with a -, then it is a hidden section and the user will not have the option of disabling it. If the section name is 'Uninstall' or is prefixed with 'un.', then it is a an uninstaller section. If section index output is specified, the parameter will be !defined with the section index (that can be used for \R{sectionsettext}{SectionSetText} etc). If the section name begins with a !, the section will be displayed as bold. If the /o switch is specified, the section will be unselected by default.

\c Section "-hidden section"
\c SectionEnd
\c
\c Section # hidden section
\c SectionEnd
\c
\c Section "!bold section"
\c SectionEnd
\c
\c Section /o "optional"
\c SectionEnd
\c
\c Section "install something" SEC_IDX
\c SectionEnd

\S2{ssectionend} SectionEnd

This command closes the current open section.

\S2{ssectionin} SectionIn

\c insttype_index [insttype_index] [RO]

This command specifies which install types (see \R{ainsttype}{InstType}) the current section defaults to the enabled state in. Multiple SectionIn commands can be specified (they are combined). If you specify RO as a parameter, then the section will be read-only, meaning the user won't be able to change its state. The first install type defined using \R{ainsttype}{InstType} is indexed 1, the next 2 and so on.

\c InstType "full"
\c InstType "minimal"
\c
\c Section "a section"
\c SectionIn 1 2
\c SectionEnd
\c
\c Section "another section"
\c SectionIn 1
\c SectionEnd

\S2{ssubsection} SubSection

\c [/e] Caption [subsection_name index output]

This command inserts a subsection. The subsection must be closed with SubSectionEnd, and should contain 1 or more Sections. If the subsection name begins with a !, the subsection will be displayed as bold. If /e is present, the sub sections of the sub section will be expanded by default. If section index output is specified, the parameter will be !defined with the section index (that can be used for SectionSetText etc). If the name is prefixed with 'un.' the subsection is an uninstaller subsection.

\c SubSection "some stuff"
\c Section "a section"
\c SectionEnd
\c Section "another section"
\c SectionEnd
\c SubSectionEnd

\S2{ssubsectionend} SubSectionEnd

Closes a subsection opened with SubSection.

