target = "NSIS"

files = Split("""
	nsismenu.cpp
""")

resources = Split("""
	nsisicon.ico
""")

rc = 'nsismenu.rc'

libs = Split("""
	user32
	gdi32
	advapi32
	ole32
	comctl32
	comdlg32
	uuid
	rpcrt4
	shell32
	wxbase26
	wxbase26_net
	wxbase26_xml
	wxexpat
	wxjpeg
	wxmsw26_adv
	wxmsw26_core
	wxmsw26_html
	wxmsw26_media
	wxmsw26_xrc
	wxpng
	wxregex
	wxtiff
	wxzlib
""")

html = Split("""
	#Menu/compiler.html
	#Menu/docs.html
	#Menu/index.html
	#Menu/intro.html
	#Menu/notinstalled.html
	#Menu/update.html
	#Menu/websites.html
""")

images = Split("""
	#Menu/images/clear.gif
	#Menu/images/header.gif
	#Menu/images/line.gif
	#Menu/images/menu.gif
	#Menu/images/menud.gif
	#Menu/images/site.gif
""")

Import('BuildUtil env')

import os

#wxlib = [os.environ['WXWIN'] + os.sep + 'lib' + os.sep + 'vc_lib']
#wxinc = [os.environ['WXWIN'] + os.sep + 'include', os.environ['WXWIN'] + os.sep + 'lib' + os.sep + 'vc_lib' + os.sep + 'msw']

#BuildUtil(target, files, libs, libpath = wxlib, cpppath = wxinc, res = rc, resources = resources, install = '', flags = ['/MD'])

# install pre-built NSIS.exe
if env['PLATFORM'] == 'win32':
	ins = env.DistributeBin('#NSIS.exe')
else:
	ins = env.DistributeW32Bin('#NSIS.exe')

env.Alias('install-utils', ins)

# install menu files

env.DistributeMenu(html, alias='install-utils')
env.DistributeMenu(images, path='images', alias='install-utils')
